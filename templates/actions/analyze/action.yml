name: "Analyze Changes"

runs:
  using: composite
  steps:
    - name: "Analyze"
      shell: bash
      run: |
        # Get the latest tag from git
        compare=$(git describe --tags $(git rev-list --tags --max-count=1))
        diff=$(git diff -U0 $compare -- src)

        # Split lines from the diff
        IFS=$'\n' read -rd '' -a lines <<< "$diff"

        echo "Diff: $diff"

        # Function to get files from the diff lines
        get_files() {
          local -n _lines=$1
          local files=()

          for line in "${_lines[@]}"; do
          if [[ "$line" =~ ^diff\ --git ]]; then
            file=$(echo "$line" | awk '{print $3}' | sed 's|^a/||')
            files+=("$file")
          fi
          done
          echo "${files[@]}"
        }

        # Get file names from diff
        files=($(get_files lines))

        # Updated regex patterns
        filter_regex_added="^[+].*apply_filters\s*\(\s*[\"\']([^\"\']+)[\"\']"
        filter_regex_removed="^[-].*apply_filters\s*\(\s*[\"\']([^\"\']+)[\"\']"
        action_regex_added="^[+].*do_action\s*\(\s*[\"\']([^\"\']+)[\"\']"
        action_regex_removed="^[-].*do_action\s*\(\s*[\"\']([^\"\']+)[\"\']"

        # Define patterns for filters, actions, and views
        patterns=(
          "filters+apply_filters"
          "filters-apply_filters"
          "actions+do_action"
          "actions-do_action"
          "views"
        )

        # Initialize results array
        declare -A results

        # Process the patterns
        for pattern in "${patterns[@]}"; do
          operator=${pattern:7:1}  # Get the operator (+/-)
          func_name=${pattern:8}   # Get the function name

          # Build the regex pattern for filters/actions
          if [[ $pattern == views ]]; then
            regex='diff --git a/src/views/([^\.]*)\.php'
          else
            if [[ "$operator" == "+" ]]; then
              if [[ "$func_name" == "apply_filters" ]]; then
                regex="$filter_regex_added"
              else
                regex="$action_regex_added"
              fi
            else
              if [[ "$func_name" == "apply_filters" ]]; then
                regex="$filter_regex_removed"
              else
                regex="$action_regex_removed"
              fi
            fi
          fi

          # Use grep to find matches for added/removed actions/filters
          result=$(echo "$diff" | grep -oP "$regex" 2>/dev/null)

          # Check if result is empty
          if [ -z "$result" ]; then
            continue
          else
            results["$pattern"]="$result"
          fi
        done

        # Display results
        for key in "${!results[@]}"; do
          items="${results[$key]}"

          echo "Items: $items"
          if [ -z "$items" ]; then
            continue
          fi

          if [[ "$key" =~ views ]]; then
            # Extract the file names, format them, and remove the leading 'a/'.
            formatted_files=$(echo "$items" | awk '{print $3}' | sed 's|^a/||' | sed 's|^|`|' | sed 's|$|`|' | paste -sd ' ' | sed 's|` |`, |g')

            echo "formatted_files: $formatted_files"
            ./vendor/bin/changelogger add --filename=analyze --filename-auto-suffix --significance=minor --type=tweak --entry="Changed views: $formatted_files" --no-interaction
          else
            if [[ "$key" =~ actions ]]; then
              # Process actions
              formatted_items=$(echo "$items" | grep -oP "do_action\s*\(\s*[\"\']([^\"\']+)[\"\']" | awk -F"'" '{print "`"$2"`"}' | paste -sd ' ' | sed 's|` |`, |g')
            elif [[ "$key" =~ filters ]]; then
              # Process filters
              formatted_items=$(echo "$items" | grep -oP "apply_filters\s*\(\s*[\"\']([^\"\']+)[\"\']" | awk -F"'" '{print "`"$2"`"}' | paste -sd ' ' | sed 's|` |`, |g')
            fi

            if [ -n "$formatted_items" ]; then
              key_short=$(echo "$key" | cut -c 1-7)
              if [[ "$key" =~ \+ ]]; then
                echo "formatted_items: $formatted_items"
                ./vendor/bin/changelogger add --filename=analyze --filename-auto-suffix --significance=minor --type=tweak --entry="Added $key_short: $formatted_items" --no-interaction
              else
                echo "formatted_items: $formatted_items"
                ./vendor/bin/changelogger add --filename=analyze --filename-auto-suffix --significance=minor --type=tweak --entry="Removed $key_short: $formatted_items" --no-interaction
              fi
            fi
          fi
        done

