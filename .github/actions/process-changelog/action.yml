name: Process Changelog
description: 'Processes changelogs for plugin releases with version detection and formatting'

inputs:
  release-version:
    description: 'The release version for which the action should process the changelog (e.g. 4.5.0) (default: will try to figure it out)'
    required: true
    default: 'figure-it-out'
  release-date:
    description: 'The release date in human-readable format (default: "today")'
    required: false
    default: 'today'
  action-type:
    description: 'Whether this is to amend or generate the changelog entries (default: "generate")'
    required: true
    default: 'generate'
  target-branch:
    description: 'Target branch for the workflow'
    required: false
    default: 'main'
  changelog-full-url:
    description: 'URL to link to the full changelog when trimming is applied (default: https://evnt.is/1b5k)'
    required: false
    default: "https://evnt.is/1b5k"
  additional-inputs:
    description: 'Additional inputs to pass through (JSON string)'
    required: false
    default: '{}'

outputs:
  changelog-content:
    description: 'The new changelog entry that was generated'
    value: ${{ steps.capture-changelog.outputs.changelog-content }}
  changes-made:
    description: 'Whether any changes were made'
    value: ${{ steps.process_changelog.outputs.changes-made || 'true' }}

runs:
  using: composite
  steps:
    - name: Setup environment
      uses: the-events-calendar/actions/.github/actions/base-setup@test/new-actions
      with:
        setup-php: 'true'
        setup-node: 'false'
        php-version: '7.4'
        fetch-depth: '0'

    - name: Set up Composer
      shell: bash
      run: composer install --no-progress --ignore-platform-reqs

    - name: Set Variables
      id: vars
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT

    - name: Set up Git configuration
      shell: bash
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "github-actions"

    - name: Detect version
      id: detect-version
      if: inputs.release-version == 'figure-it-out'
      uses: the-events-calendar/actions/.github/actions/detect-version@test/new-actions

    - name: Set release version
      id: set-version
      shell: bash
      run: |
        if [ "${{ inputs.release-version }}" == "figure-it-out" ]; then
          RELEASE_VERSION="${{ steps.detect-version.outputs.version }}"
          echo "Auto-detected version: $RELEASE_VERSION"
        else
          RELEASE_VERSION="${{ inputs.release-version }}"
          echo "Using provided version: $RELEASE_VERSION"
        fi
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

    - name: Format the release date
      id: format_date
      shell: bash
      env:
        RELEASE_DATE: ${{ inputs.release-date }}
        CHANGELOG_FULL_URL: ${{ inputs.changelog-full-url }}
      run: ./bin/process-changelog.sh ${{ steps.set-version.outputs.RELEASE_VERSION }} $CURRENT_VERSION ${{ inputs.action-type }} $RELEASE_DATE $CHANGELOG_FULL_URL
