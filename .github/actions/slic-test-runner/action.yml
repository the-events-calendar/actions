name: Slic Test Runner
description: 'Runs PHP tests using the slic testing framework'

inputs:
  suite:
    description: 'Test suite to run'
    required: true
  skip-flag:
    description: 'Skip flag to check for (e.g., skip-views-core)'
    required: false
    default: ''
  wordpress-version:
    description: 'WordPress version to use'
    required: false
    default: '6.6'
  additional-setup:
    description: 'Additional setup commands to run before tests'
    required: false
    default: ''
  gh-bot-token:
    description: 'GitHub bot token for checkout'
    required: false

runs:
  using: composite
  steps:
    # ------------------------------------------------------------------------------
    # Check skip condition
    # ------------------------------------------------------------------------------
    - name: Check skip condition
      id: check-skip
      shell: bash
      run: |
        if [[ -n "${{ inputs.skip-flag }}" ]] && [[ "${{ github.event.pull_request.body }}" == *"[skip-${{ inputs.skip-flag }}]"* ]]; then
          echo "should_skip=true" >> $GITHUB_OUTPUT
          echo "## Skipped due to skip flag: ${{ inputs.skip-flag }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "should_skip=false" >> $GITHUB_OUTPUT
        fi

    - name: Checkout the repository
      if: steps.check-skip.outputs.should_skip != 'true'
      uses: actions/checkout@v4
      with:
        fetch-depth: 1000
        token: ${{ inputs.gh-bot-token }}
        submodules: recursive

    # ------------------------------------------------------------------------------
    # Set up PHP to run slic
    # ------------------------------------------------------------------------------
    - name: Configure PHP environment
      if: steps.check-skip.outputs.should_skip != 'true'
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4

    # ------------------------------------------------------------------------------
    # Check if any PHP files have changed
    # ------------------------------------------------------------------------------
    - name: Check changed files
      if: steps.check-skip.outputs.should_skip != 'true'
      id: skip
      shell: bash
      run: |
        num_php_files=$(git diff ${{ github.event.pull_request.base.sha }} HEAD --name-only | grep -P "\.php" | wc -l)
        if [[ -z "$num_php_files" ]]; then
          echo "value=1" >> $GITHUB_OUTPUT
          echo "## No PHP Files changed, PHP tests automatically pass." >> $GITHUB_STEP_SUMMARY
        elif [[ "$num_php_files" == "0" || "$num_php_files" == "" ]]; then
          echo "value=1" >> $GITHUB_OUTPUT
          echo "## No PHP Files changed, PHP tests automatically pass." >> $GITHUB_STEP_SUMMARY
        else
          echo "value=0" >> $GITHUB_OUTPUT
          echo "## Found PHP file changes, running PHP tests." >> $GITHUB_STEP_SUMMARY
        fi

    # ------------------------------------------------------------------------------
    # Checkout slic
    # ------------------------------------------------------------------------------
    - name: Checkout slic
      uses: actions/checkout@v4
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      with:
        repository: stellarwp/slic
        ref: main
        path: slic
        fetch-depth: 1

    # ------------------------------------------------------------------------------
    # Prepare our composer cache directory
    # ------------------------------------------------------------------------------
    - name: Get Composer Cache Directory
      id: get-composer-cache-dir
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      id: composer-cache
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      with:
        path: ${{ steps.get-composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    # ------------------------------------------------------------------------------
    # Initialize slic
    # ------------------------------------------------------------------------------
    - name: Set up slic env vars
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        echo "SLIC_BIN=${GITHUB_WORKSPACE}/slic/slic" >> $GITHUB_ENV
        echo "SLIC_WP_DIR=${GITHUB_WORKSPACE}/slic/_wordpress" >> $GITHUB_ENV
        echo "SLIC_WORDPRESS_DOCKERFILE=Dockerfile.base" >> $GITHUB_ENV

    - name: Set run context for slic
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: echo "SLIC=1" >> $GITHUB_ENV && echo "CI=1" >> $GITHUB_ENV

    - name: Start ssh-agent
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        mkdir -p "${HOME}/.ssh";
        ssh-agent -a /tmp/ssh_agent.sock;

    - name: Export SSH_AUTH_SOCK env var
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: echo "SSH_AUTH_SOCK=/tmp/ssh_agent.sock" >> $GITHUB_ENV

    - name: Set up slic for CI
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/..
        ${SLIC_BIN} here
        ${SLIC_BIN} interactive off
        ${SLIC_BIN} build-prompt off
        ${SLIC_BIN} build-subdir off
        ${SLIC_BIN} xdebug off
        ${SLIC_BIN} debug on
        ${SLIC_BIN} info
        ${SLIC_BIN} config

    - name: Start the Chrome container
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: ${SLIC_BIN} up chrome

    - name: Set up Common
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        docker network prune -f
        ${SLIC_BIN} use the-events-calendar/common
        ${SLIC_BIN} composer install --no-dev

    - name: Set up The Events Calendar
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        ${SLIC_BIN} use the-events-calendar
        ${SLIC_BIN} composer install

    # ------------------------------------------------------------------------------
    # Update WordPress version to our min required.
    # ------------------------------------------------------------------------------
    - name: Init the WordPress container
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        ${SLIC_BIN} up wordpress
        ${SLIC_BIN} wp core version
        ${SLIC_BIN} wp core update --force --version=${{ inputs.wordpress-version }}
        ${SLIC_BIN} wp core version

    - name: Ensure Twenty-Twenty is installed
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: |
        ${SLIC_BIN} wp theme install twentytwenty --activate

    # ------------------------------------------------------------------------------
    # Run additional setup if provided
    # ------------------------------------------------------------------------------
    - name: Run additional setup
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1' && inputs.additional-setup != ''
      shell: bash
      run: ${{ inputs.additional-setup }}

    # ------------------------------------------------------------------------------
    # Run the Actual tests
    # ------------------------------------------------------------------------------
    - name: Run suite tests
      if: steps.check-skip.outputs.should_skip != 'true' && steps.skip.outputs.value != '1'
      shell: bash
      run: ${SLIC_BIN} run ${{ inputs.suite }} --ext DotReporter
